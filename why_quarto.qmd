# 콰르토 글쓰기의 장점 {-}

오늘날 디지털 세계에는 워낙 좋은 도구들이 넘쳐난다. 글쓰기라고 하면 뛰어난 성능의 워드 프로세서들이 이전부터 있었는데 왜 굳이 콰르토와 같은 도구를 다시 배울 필요가 있을까 하는 생각을 할 수도 있다. 맞는 말이다! 이와 같은 물음은 좋은 워드 프로세서들이 있는데 왜 굳이 레이텍({{< latex >}})과 같은 도구를 사용하여 글을 써야 하나라는 질문과 유사한 측면이 있다. 이 질문에 대해서 답을 한 블로그 ["Reasons why you must, should, and should not use LaTeX"](https://towardsdatascience.com/why-should-you-learn-latex-or-at-least-give-it-a-try-8d0f3218b8e)가 있으니 읽어 보면 좋을 것 같다. 그 글에 공감하는 바가 커서 여기서 콰르토로 글을 쓰는 것의 장점에 대해서 정리해 보려고 한다.

## 학계, 특히 STEM(과학, 기술, 공학, 수학) 분야 전문가를 위한 도구

콰르토는 "an open-source scientific and technical publishing system"이라고 소개하듯이 과학, 기술 분야의 글쓰기에 적합한 도구이다. 대학이나 연구소에 종사한다면 더욱 콰르토가 도움이 될 것이다. 왜냐하면, 이 분야 전문가들은 논문, 외부 제출 연구 보고서, 학회 발표 자료, 내부 실험 결과 보고서 등을 통해 커뮤니케이션을 위한 글쓰기가 일상이기 때문이다.

## 계산 도구이자 글쓰기 도구 

"[-@sec-computationalnotebook]장 컴퓨테이셔널 노트북과 콰르토"에서 설명하겠지만, 콰르토를 사용한다는 것은 컴퓨테이셔널 노트북을 사용한다는 의미를 내포하고 있다. 나는 공학 등을 잘 모르지만, STEM에 종사하는 사람들은 항상 계산하고 그 결과를 생각하고 내용을 정리할 것으로 추측된다. 이들에게 계산은 그 누구보다 일상의 일이다. 그런 일들이 (결과 보고서 작성 같은) 글쓰기라는 또다른 일상의 일과 떨어져 있다면 효율은 떨어질 것이다. 콰르토와 그 바닥에 깔려 있는 컴퓨테이셔널 노트북을 쓴다는 것은 그런 일을 하나로 흐름으로 묶어내는 것과 같다. 그래서 [미국 지구 물리학회](https://eos.org/editors-vox/notebooks-now-elevating-computational-notebooks) 같은 단체도 이와 같은 도구 사용을 적극 권장하는 것이 아닌가 하는 생각을 한다.

[![그림 클릭해서 노트북 소개글로 이동](https://i0.wp.com/eos.org/wp-content/uploads/2022/08/Featured-Image-Notebooks-1.png?w=1200&ssl=1)](https://eos.org/editors-vox/notebooks-now-elevating-computational-notebooks)

## 과학 문헌의 요소: 참고문헌, 수식, 상호 참조 기능, 각주, 분자구조 등

콰르토로 작업하면, 다음과 같이 R 또는 파이썬 코드로 생성하는 플롯 등을 쉽게 추가할 수 있다.

```{python}
#| label: fig-polar
#| fig-cap: "직선을 극좌표로 바꿈"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

이 책과 같이 웹 콘텐츠인 경우 다음과 같은 사용자 인터랙션이 가능한 플롯도 추가할 수 있다.

```{python}
import plotly.express as px
df = px.data.tips()
fig = px.histogram(df, x="total_bill", y="tip", color="sex", marginal="rug",
                   hover_data=df.columns)
fig.show()
```

콰르토와 이를 뒷받침하는 팬독에서는 참고문헌 관리가 간단하다. 참고 문헌 관리 소프트웨어를 굳이 사용하지 않아도 쉽게 참고문헌을 관리할 수 있고, 이것을 문서에 포함시킬 수 있다. 유명 저널에서 사용하는 참고 문헌 형식(Citation Styles)을 모두 사용할 수 있다. 필요하면 커스터마이징도 가능하다.

--------

페르난도 페레즈는 이런 공로를 인정받아 2017년 "ACM Software System Award" 등을 비롯하여 여러 상을 받았고, 2021년 1월에는 네이처(Nature)가 선정한 "과학은 바꾼 10가지 컴퓨터 코드"(Ten computer codes that transformed science)[@perkel2021ten]로 선정되기도 하였다(클릭하지 말고 마우스를 위에 놓으면 이동하지 않고도 참고문헌을 볼 수 있다).

----------


콰르토에서는 레이텍 {{< latex >}} (이 문자는 `fancy-text`라는 콰르토 익스텐션을 사용하여 입력했다)에서 사용하는 수식을 그대로 쓸 수 있어 수식을 만드는 데 전혀 장애가 없다.

-------

$$ 
X \sim \mathcal{N}(\mu,\,\sigma^{2})
$$ {#eq-normal-distribution}

[@eq-normal-distribution]을 보면 

----------

수학 논문 등에서 필요한 theorem, lemma 등을 입력할 수 있는 환경이 준비되어 있고, 아래와 같이 이것에 대한 상호 참조도 간단하게 만들 수 있다.

---------

::: {#thm-line}

## Line

The equation of any straight line, called a linear equation, can be written as:

$$
y = mx + b
$$
:::

[@thm-line]을 보면...

----------

또는 문서에 [molstar](https://github.com/jmbuhr/quarto-molstar)라는 익스텐션을 사용하여 다음과 같이 고분자 화합물^[<https://www.rcsb.org/3d-view/3GQL>]을 보는 몰스타 뷰어를 포함시킬 수도 있다.


{{< mol-url https://files.rcsb.org/view/3gql.pdb >}}


## R, 파이썬을 일상적으로 사용 

콰르토는 지금은 데이터 과학에서 많이 사용되는 R, 파이썬(Python), 줄리아(Julia), ObservableJS(자바스크립트) 언어에 기반을 둔 엔진을 사용한다. 콰르토를 사용한다는 것은 이와 같은 언어를 사용한다는 의미이다. 현재 거의 모든 과학 분야에서 데이터 과학적인 접근법이 중요해 지고 있다. 

R이나 파이썬에는 대부분의 전문 분야와 관련된 도구들이 마련되어 있다. 제약 분야에서 R [pharmaverse](https://pharmaverse.org)이 있고 생물정보학의 [바이오컨덕터](https://www.bioconductor.org)도 있고, [화성 탐사에도 파이썬](https://learnpython.com/blog/python-on-mars/)이 큰 기여를 한다.

따라서 거의 모든 분야에서 이와 같은 프로그래밍 언어를 잘 쓰는 것은 중요하다. 잘 쓰려면 문서, 보고서 작성과 같은 일상에서 이와 같은 언어를 사용할 필요가 있다. 콰르토는 이런 습관을 들이는 데도 제격이라고 생각한다.


## 다양한 포맷의 문서를 하나의 소스로 다이내믹하게 작성

콰르토 또는 그 전신인 R 마크다운을 사용하면, 소스가 되는 문서를 하나 작성하면 이것을 가지고 워드나 PDF 같은 종이를 기반으로 한 보고서는 물론이고, HTML로 된 문서 또는 프레젠테이션, 블로그, 웹 사이트와 종이책 또는 이북, 웹북 같은 포맷의 복합 문서를 만드는 것도 간단히 해결된다. 

콰르토를 사용하면, 얻어진 데이터를 가지고 R 또는 파이썬을 사용하여 분석한 과정을 투명하게 알 수 있고, 그런 데이터를 가지고 다이내믹하게 표 또는 그래프 등과 연결되기 때문에 결과를 신뢰할 수 있다. 데이터에 업데이트가 있는 경우 다시 계산할 필요없이 바로 결과물을 얻을 수 있다. 이를 통해 데이터와 분석에서의 재현성을 제고할 수 있다.


## 일반 텍스트와 깃(Git) 버전 관리

글쓰는 것이야 "워드나 한글 프로그램에서 타이핑을 하면 그만이지, 뭘 또 규칙을 배워야 해!"라고 생각할지도 모르겠다. 한번 쓰고 버리는 글이야 그럴수도 있지만, 텍스트 에디터에서 일반 텍스트(plain text)로 마크다운 문법을 배워서 글을 쓰면 장점이 많다.

일반 텍스트는 사람이 입력한 것을 거의 있는 그대로 저장하는 방식이다. 내가 좋아하는 『실용주의 프로그래머』[@pragmatic2014] 책에 "일반 텍스트의 힘"에 대한 글이 있다. 책에는 다음과 같이 지식을 저장하는 최고의 포맷이 일반 텍스트라고 하고 있다.

> 실용주의 프로그래머로서 우리의 기본 재료는 나무나 철이 아니고 지식이다. 우리는 요구사항을 지식으로 수집하고 그 지식을 설계, 구현, 테스트 그리고 문서에 표현한다. 그리고 우리는 지식을 저장하는 최고의 포맷이 일반 텍스트(plain text)라고 믿는다. 일반 텍스트를 사용하면 우리가 원하는 거의 모든 도구를 이용해서, 수작업과 프로그램을 통한 방법 모두로 지식을 조작할 수 있는 능력이 생긴다.

콰르토로 글을 쓴다는 것은 플레인 텍스트로 RStudio, VS Code, 또는 주피터 노트북/주피터랩 같은 텍스트 에디터를 사용하여 내용을 쓴다는 것을 의미한다. 텍스트 에디터는 일반 워드 프로세서가 제공하지 못하는 드넓은 자유를 제공한다. 이런 도구는 원래 코드를 작성할 때 주로 사용되는 도구이지만, 일반 텍스트를 작성할 때도 편리한 점이 많다. 나는 VS Code에서 모든 메뉴를 사라지게 하고 내용 입력에 집중할 수 있는 젠 모드(Zen mode) 기능을 즐겨 사용한다. 원하는 파일을 바로 오픈할 수 있고, 파일 안에서 원하는 곳으로 스크롤 없이 바로 이동 가능하다.

플레인 텍스트로 작업하기 때문에, [깃(Git)](https://git-scm.com)을 아는 독자라면 모든 작업 과정을 깃을 이용하여 소스에 대한 버전 관리가 쉽다.

## 몰입하여 글을 쓸 수 있는 환경

콰르토로 글을 쓰다 보면, 문서를 작성하는 일을 한다기보다 뭔가 만든다는 기쁨을 준다. 내용에 집중할 수 있어서 글쓰기의 몰입도를 높일 수 있다. 몰입은 결국은 생산성의 향상으로 이어진다. 재미있고, 빠져든다. 

## 참고문헌