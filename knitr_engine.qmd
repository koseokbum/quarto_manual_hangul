# 니터(knitr) 엔진

콰르토는 [R 마크다운](https://bookdown.org/sulgi/r4ds/rmarkdown.html)에서 발전된 도구이다. R 마크다운은 R 언어의 니터(`knitr`), 알마크다운(`rmarkdown`)이라는 패키지와 내부적으로 팬독(`pandoc`)을 사용한 글쓰기 도구이다. 콰르토가 R 마크다운에 기반하고 있기 때문에 기존 R 마크다운에 대해 이미 알고 있는 독자라면 콰르토를 쉽게 사용할 수 있을 것이다.

여기서는 R 마크다운에서 바뀐 점들과 독자들이 R 마크다운을 사용해 본 경험이 없다고 가정하고 내용을 정리하려고 한다. 

## 콰르토의 디폴트 엔진: 니터(knitr)

콰르토는 R 마크다운을 발전시킨 것이다. R 마크다운 시스템은 다음과 같은 여러 패키지 또는 도구들을 결합하여 다이내믹 문서를 만든다.

- 소프 파일: 확장자는 `.Rmd`을 사용하고, 플레인 텍스트로 입력한다. 

- 코드 입력과 실행: R 코드는 코드 청크(code chunk)라고 불리는 영역에 코드를 입력한다. 코드 청크와 코드 블록은 동의어라고 봐도 무방하다. R `knitr` 패키지는 이 코드 부분을 제어한다. 자세한 개발 동기와 사용법은 [knitr](https://yihui.org/knitr/) 사이트를 참고한다. 간단하게 설명하면, 니터는 R 코드를 실행하고, 그 결과를 주변 마크다운 문법에 맞게 가져다 놓는다. 
- 텍스트 입력: R 마크다운 시스템은 [팬독 마크다운](https://pandoc.org)으로 텍스트를 입력한다. 
- 프로세싱: 팬독에서 대한 R 언어 랩퍼(wrapper) 역할을 하는 것이 [rmarkdown](https://rmarkdown.rstudio.com) 패키지이다. 

콰르토는 여전히 이러한 니터(`knitr`)를 디폴트로 엔진으로 사용한다. RStudio에서 콰르토 문서를 작성하기 위해서는 이들 패키지가 여전히 필요한데, RStudio에서 메뉴를 가지고 작업을 시작하면 필요한 패키지를 다운로드할 것을 알려주기 때문에 그리 걱정할 것이 없다. 지시에 따라 패키지를 인스톨하면 그만이다. 

R 패키지 하나로 `quarto`라는 패키지가 있다. 이 패키지는 비니에트를 읽어 보면 [RStudio Connect](https://posit.co/products/enterprise/connect/) 서비스나 [shinyapps.io](https://www.shinyapps.io)에서 사용하기 위한 함수들을 포함한다고 설명되어 있다. 즉, 콰르토의 기능을 클라우드 등 서버에 이용할 수 있게 한 다음, R 코드로 자동으로 문서를 프로세싱할 때 사용한다. 로컬 컴퓨터에서만 작업할 때는 이 패키지를 사용할 필요가 없다.

앞에서도 언급한 것과 같이 콰르토는 다음과 같이 기존 R 마크다운의 한계를 뛰어 넘는 기능들을 제공한다.

- 콰르토는 R 패키지가 아니고 독립적인 명령행 도구로 제공한다.
- 콰르토는 R 언어를 비롯하여, 파이썬, 줄리아, 자바스크립트과 같은 언어도 지원한다.
- 그러면서 기존 RStudio 뿐만 아니라 주피터 노트북이나 VS Code와 같은 텍스트 에디터에서도 쉽게 사용할 수 있다.
- 팬독(pandoc)의 기능을 최대한 활용할 수 있다. 
- 일관적인 상호 참조 시스템을 제공한다. 

R `knitr` 패키지도 기존 `.Rmd` 파일과의 호환성을 위해서 기존 R 표현식으로 쓰던 청크 옵션들을 YAML 형식으로도 쓸 수 있게 업데이트되었다. 따라서 기존 `.Rmd` 파일도 `.qmd` 파일로 이름을 바꿔서 프로세싱해도 문제되는 경우는 거의 없을 것이다. 

## 코드 청크(코드 블록) 옵션의 사용 

코드 청크(블록)을 넣는 방법은 [@sec-create-code-block]을 참고한다. 코드 청크의 옵션은 다음과 같이 `#|`으로 시작하는 특수한 코멘트 다음에 YAML 형식으로 입력한다.


``` {{r}}
#| label: fig-polar
#| echo: false
#| fig-cap: "A line plot on a polar axis"
```

이 절의 자세한 내용은 콰르토 문서에서 [Code Cells: Knitr](https://quarto.org/docs/reference/cells/cells-knitr.html#cell-output)를 참고하면 되므로, 여기서 다시 설명할 필요는 없을 것 같다. RStudio 통합개발환경이나 Quarto 익스텐션이 설치된 VS Code에서 작업할 때는 이런 옵션에 대한 진단 기능이 있어서 일부 내용을 입력하면 선택할 수 있는 옵션들이 자동으로 보이게 되어 있어 편리하다. 

몇 가지 주의할 점만 지적하고 싶다. 

- 기존 R 마크다운에서는 R 코드로 옵션을 지정했다면, 콰르토에서는 YAML을 사용하여 값을 지정한다. R 마크다운에는 필드 이름을 언더라인(`_`)을 가지고 연결했다면 콰르토에서는 하이픈(`-`)을 사용하여 연결한다. 

- 레이블(`label`)은 중요한 역할을 하는데, 코드가 출력하는 종류에 따라서 `fig-`(그림), `tbl-`(표) 등 접두사를 잘 사용해야 상호 참조가 제대로 만들어지므로, 접두사를 신경써서 정한 다음 코드 레이블을 입력한다.

## 니터 옵션 설정 

기존 R 마크다운을 사용할 때 어떤 문서 안의 모든 코드 청크에 적용되는 디폴트 옵션을 정할 때는 다음과 같이 `opts_chunk$set()` 함수를 사용한다.

```{{r}}
knitr::opts_chunk$set(
  comment = '', fig.width = 6, fig.height = 6
)
```

꼭 같은 효과를 콰르토 소스 문서에서 정의할 때는 YAML 헤더에서 `knitr`라는 필드의 하위 필드의 `opts_chunk`에 값을 준다.

``` markdown
---
title: "My Document"
format: html
knitr:
  opts_chunk: 
    comment: "" 
    fig-width: 6
    fig-height: 6
---
```

그런데, 콰르토 니터 엔진을 사용할 때는 이렇게 `knitr > opts_chunk`을 사용해야 하는 옵션들이 많지는 않다. 내 생각에 `comment`나 `prompt` 정도이고, 나머지는 콰르토의 `execute:` 필드(코드 실행 조정) 또는 `format` 필드의 서브 하부 필드에서 지정할 수 있다. 위 설정이나 아래 설정은 동일하다. 심지어 `comment` 설정도 콰로트에서는 쓰지 않는 것이 디폴트이기 때문에 지워도 무방하다.


``` markdown
---
title: "My Document"
format: 
  html:
    fig-width: 6
    fig-height: 6
knitr:
  opts_chunk: 
    comment: "" 
---
```

참고로 니터에서 `comment`는 출력되는 R 코드에 프롬프트를 앞에 넣을지를 결정한다. `comment`는 R 코드가 텍스를 출력할 때 앞에서 붙이는 코멘트로 `##`을 디폴트로 쓰는데 이 문자열을 지정한다. 



